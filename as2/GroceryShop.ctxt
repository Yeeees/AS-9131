#BlueJ class context
comment0.params=
comment0.target=GroceryShop()
comment0.text=\r\n\ Constructor\ for\ this\ class\r\n
comment1.params=
comment1.target=void\ start()
comment1.text=\r\n\ Start\ this\ program,\ display\ the\ menu.\r\n\ Get\ option\ and\ provides\ functions\r\n
comment10.params=temp
comment10.target=int\ checkDiscount(int)
comment10.text=\r\n\ Arrange\ the\ discount\r\n\ @param\ a\ temp\ number\ for\ stock\ level\r\n\ @return\ integer\ of\ discount\r\n
comment11.params=
comment11.target=void\ listItems()
comment11.text=\r\n\ Get\ option\ and\ list\ items\ by\ user's\ option\r\n\ \r\n
comment12.params=
comment12.target=void\ searchName()
comment12.text=\r\n\ Enter\ a\ name\ and\ check\ wether\ this\ name\ exist\ or\ not\r\n
comment13.params=
comment13.target=void\ searchLvl()
comment13.text=\r\n\ Get\ option\ for\ searching\ stock\ level,\ can\ be\ equal\ greater\ or\ lower\r\n
comment14.params=
comment14.target=void\ searchLvlEqual()
comment14.text=\r\n\ Search\ for\ the\ level\ equals\ to\ a\ number\r\n
comment15.params=
comment15.target=void\ searchLvlGreater()
comment15.text=\r\n\ Search\ for\ the\ level\ greater\ than\ a\ number\r\n
comment16.params=
comment16.target=void\ searchLvlLower()
comment16.text=\r\n\ Search\ for\ the\ level\ lower\ than\ to\ a\ number\r\n
comment17.params=
comment17.target=void\ searchDiscount()
comment17.text=\r\n\ Search\ for\ items\ have\ particular\ discount.\r\n\ The\ discount\ only\ can\ be\ in\ 0\ 10\ or\ 20\r\n
comment18.params=temp
comment18.target=void\ listItems(java.util.ArrayList)
comment18.text=\r\n\ List\ all\ the\ items\ in\ a\ Arraylist\ of\ items\r\n
comment19.params=
comment19.target=void\ levelMenu()
comment19.text=\r\n\ Display\ menu\ for\ level\ search\r\n
comment2.params=size
comment2.target=int\ getOption(int)
comment2.text=\r\n\ Let\ user\ to\ enter\ a\ option\ number\r\n\ \r\n\ @param\ The\ size\ of\ the\ menu,\ restrict\ user\ to\ enter\ right\ options.\r\n\ @return\ A\ integer,\ the\ number\ of\ option.\r\n
comment20.params=
comment20.target=void\ listMenu()
comment20.text=\r\n\ Display\ menu\ for\ List\ menu\r\n
comment21.params=
comment21.target=void\ updateItem()
comment21.text=\r\n\ Method\ for\ update\ item.\r\n\ First\ it\ will\ check\ the\ ID\ provided\ from\ user\ whether\ it\ is\ exist\ or\ not.\r\n\ Then\ it\ will\ find\ this\ particular\ item.\r\n\ Finally\ it\ let\ user\ to\ enter\ the\ new\ values\ of\ item\ update\ them.\r\n
comment22.params=
comment22.target=int\ checkIdExist()
comment22.text=\r\n\ Check\ the\ id\ to\ prevent\ it's\ not\ existing.\r\n\ @return\ this\ id\r\n
comment23.params=
comment23.target=void\ removeItems()
comment23.text=\r\n\ Method\ for\ remove\ a\ particular\ item\r\n
comment24.params=
comment24.target=void\ help()
comment24.text=\r\n\ Display\ HEIP\r\n
comment25.params=
comment25.target=void\ exit()
comment25.text=\r\n\ Method\ for\ exit\ program.\r\n\ Write\ the\ data\ back\ to\ the\ file\ and\ clean\ the\ program\r\n\ \r\n
comment26.params=
comment26.target=void\ write()
comment26.text=\r\n\ Write\ the\ data\ back\ to\ the\ txt.\r\n\ Splite\ and\ write\ into\ the\ file.\r\n
comment27.params=
comment27.target=void\ supply()
comment27.text=\r\n\ Supply's\ main\ menu\r\n
comment28.params=
comment28.target=void\ displaySupplyMenu()
comment28.text=\r\n\ Display\ supply\ menu\r\n
comment29.params=
comment29.target=void\ readSupplier()
comment29.text=\r\n\ Read\ the\ data\ from\ supplier's\ file\r\n
comment3.params=
comment3.target=void\ displayMenu()
comment3.text=\r\n\ Display\ the\ main\ menu\r\n
comment30.params=
comment30.target=void\ addSupplier()
comment30.text=\r\n\ Add\ a\ supplier\r\n
comment31.params=
comment31.target=int\ checkPhoneExist()
comment31.text=\r\n\ Check\ if\ the\ phone\ number\ existing\r\n\ @return\ a\ valid\ phone\ number\r\n
comment32.params=
comment32.target=int\ checkPhone()
comment32.text=\r\n\ Check\ the\ phone\ to\ prevent\ it's\ not\ existing\r\n\ @return\ a\ existing\ phone\ number\r\n
comment33.params=
comment33.target=void\ listSupply()
comment33.text=\r\n\ List\ the\ suppliers\ in\ different\ options\r\n
comment34.params=temp
comment34.target=void\ listSuppliers(java.util.ArrayList)
comment34.text=\r\n\ list\ the\ information\ of\ a\ supplier\ and\ the\ items\ he\ or\ her\ provides\r\n
comment35.params=
comment35.target=void\ searchSupplierName()
comment35.text=\r\n\ Search\ for\ a\ name\ of\ supplier\r\n
comment36.params=
comment36.target=void\ searchSupplierPhone()
comment36.text=\r\n\ Search\ for\ a\ phone\ number\r\n
comment37.params=
comment37.target=void\ searchSupply()
comment37.text=\r\n\ Search\ for\ a\ particular\ item\ of\ the\ supplier\r\n
comment38.params=
comment38.target=void\ listSupplierMenu()
comment38.text=\r\n\ Display\ supplier's\ menu\r\n
comment39.params=
comment39.target=void\ updateSupplier()
comment39.text=\r\n\ Update\ a\ Supplier.\r\n\ Search\ for\ this\ supplier's\ phone\ number\ and\ locate\ this\ supplier\r\n\ \r\n
comment4.params=
comment4.target=void\ read()
comment4.text=\r\n\ Read\ data\ from\ items.txt\r\n\ This\ method\ will\ splite\ the\ data\ can\ send\ create\ an\ for\ each\ line.\r\n\ Then\ it\ wll\ send\ the\ item\ to\ a\ Arraylist\ called\ itemlist\ and\ keep\ it.\r\n\ \r\n
comment40.params=supPosition
comment40.target=void\ updateSupplierName(int)
comment40.text=\r\n\ Change\ supplier's\ name\r\n\ @param\ supplier's\ position\ in\ supplier\ list\r\n
comment41.params=supPosition
comment41.target=void\ updateSupplierPhone(int)
comment41.text=\r\n\ Change\ supplier's\ phone\ number\r\n\ @param\ supplier's\ position\ in\ supplier\ list\r\n
comment42.params=position\ phone
comment42.target=void\ displaySupplierMenu(int,\ int)
comment42.text=\r\n\ Display\ supplier's\ menu\r\n\ @param\ supplier's\ position\ in\ supplier\ list\r\n\ @param\ supplier's\ phone\ number\r\n
comment43.params=supPosition
comment43.target=void\ addSupplierItem(int)
comment43.text=\r\n\ Add\ a\ item\ for\ this\ supplier\r\n\ @param\ supplier's\ position\ in\ supplier\ list\r\n
comment44.params=supPosition
comment44.target=int\ checkSupplierItemId(int)
comment44.text=\r\n\ Check\ particular\ supplier's\ item\ \r\n\ @param\ supplier's\ position\ in\ supplier\ list\r\n\ @return\ integer\ id\r\n
comment45.params=supPosition
comment45.target=int\ checkSupplierItemIdExist(int)
comment45.text=\r\n\ prevent\ supplier's\ one\ item\ id\ not\ existing\r\n\ @param\ supplier's\ position\ in\ supplier\ list\r\n\ @return\ integer\ id\r\n
comment46.params=supPosition
comment46.target=void\ updateSupplierItem(int)
comment46.text=\r\n\ update\ supplier's\ item\r\n\ @param\ supplier's\ position\ in\ supplier\ list\r\n
comment47.params=supPosition
comment47.target=void\ removeSupplierItems(int)
comment47.text=\r\n\ remove\ supplier's\ item\r\n\ @param\ supplier's\ position\ in\ supplier\ list\r\n
comment48.params=
comment48.target=void\ supplierExit()
comment48.text=\r\n\ exit\ supplier\ menu\r\n\ write\ the\ data\ back\ to\ supplier\ file\r\n\ clean\ all\ data\r\n
comment49.params=
comment49.target=void\ writeSupplier()
comment49.text=\r\n\ write\ the\ data\ back\ to\ supplier\ file\r\n
comment5.params=
comment5.target=void\ addItem()
comment5.text=\r\n\ Create\ a\ item\ and\ send\ it\ to\ the\ itemList.\r\n
comment50.params=
comment50.target=void\ removeSupplier()
comment50.text=\r\n\ remove\ a\ particular\ supplier\r\n
comment6.params=
comment6.target=java.lang.String\ checkName()
comment6.text=\r\n\ Check\ the\ name\ of\ the\ item\ to\ prevent\ any\ error\r\n\ @retrun\ the\ name\r\n
comment7.params=
comment7.target=int\ checkId()
comment7.text=\r\n\ Check\ the\ id\ number\ and\ prevent\ it's\ already\ exist\r\n\ @return\ integer\ number\r\n
comment8.params=
comment8.target=int\ checkCost()
comment8.text=\r\n\ Check\ item's\ price\r\n\ @return\ integer\ cost\r\n
comment9.params=
comment9.target=int\ checkLvl()
comment9.text=\r\n\ Check\ stock\ level\ and\ make\ sure\ it\ is\ valid\r\n\ @return\ integer\ number\ level\r\n
numComments=51
